var openComments = document.querySelectorAll('.comment.with-form');
for (var i = 0; i < openComments.length; i++) {
  var openComment = openComments[i];

  openComment.classList.remove('with-form');
  openComment.classList.add('with-hidden-form');
}

var commentId = 'new_comment';
var comment = document.getElementById(commentId);

if (comment) {
  if (comment.classList.contains('with-hidden-form')) {
    comment.classList.remove('with-hidden-form');
  } else {
    var container = comment.querySelector('main');
    if (container) {
      container.innerHTML += "<%= j render('task_comments/form', task: @task, task_comment: @task_comment, remote: true) %>";
    }
  }

  comment.classList.add('with-form');
  initForms(comment);
}

// initialize markdown editor and validations
function initForms(comment) {
  const event = new CustomEvent('custom:reset-forms', { data: { url: this.location.href }});
  document.dispatchEvent(event);
}
